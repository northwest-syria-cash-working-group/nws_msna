y = 500, hjust = -.4, colour = "blue") +
labs(title = "Histogram of monthly household expenditures per capita",
subtitle = "Mean marked in blue, median in green",
x = "Expenditures per capita",
y = "Count of households") +
facet_wrap(~ hoh_sex) +
theme(legend.position = "none",
strip.text = element_text(size = 10, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.title = element_text(size = 11))
install.packages("utf8")
install.packages("utf8")
install.packages("utf8")
install.packages("utf8")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidymodels)
library(tidytext)
library(flextable)
library(RColorBrewer)
library(lubridate)
library(sf)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# disabling scientific notation
options(scipen = 999)
theme_set(theme_light())
pcode3_shape <-
st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp",
quiet = TRUE)
pop <- read_excel("./data/monthly_displacement_northen_syria_november_2022.xlsx") %>%
clean_names() %>%
# You really need to remember how to do this
rename_all(
funs(
str_replace_all(., "id_ps", "idps") %>%
str_replace_all(., "h_hs", "hhs"))) %>%
mutate(total_pop = population_individuals + idps_individuals)
locations <- read_excel("./data/Locations.xlsx") %>%
clean_names()
nw <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1,
sheet = 1) %>%
clean_names() %>%
filter(ao_c == "NW") %>%
pull(admin3pcode)
msna_names <- read_excel("./data/2022-09-06_SYR_MSNA2022_dataset_HHs.xlsx",
sheet = "Dataset - households") %>%
head(1) %>% transpose_df() %>%
mutate(col_id = paste0("c" , row_number())) %>%
select(col_id, rowname)
msna <- read_excel("./data/2022-09-06_SYR_MSNA2022_dataset_HHs.xlsx",
sheet = "Dataset - households") %>%
setNames(msna_names %>% pull(col_id)) %>%
separate(c3, c("admin1pcode", "governorate"), sep = " - ") %>%
separate(c4, c("admin2pcode", "district"), sep = " - ") %>%
separate(c5, c("admin3pcode", "sub_district"), sep = " - ") %>%
rename(admin4pcode = c7) %>%
filter(c750 == "NWS") %>%
select(id = c1,
weight = c2,
idp_site = c8,
site_type = c9,
admin1pcode,
admin2pcode,
admin3pcode,
admin4pcode,
governorate,
district,
sub_district,
rcsi = c739,
hoh_employ = c732,
pop_group_sex = c729,
hoh_sex = c730,
hoh_employ = c732,
pop_group = c749,
diplacement_year = c746,
return_year = c747,
shelter_type = c414,
modality_preference = c722,
modality_cash = c723,
modality_voucher = c724,
modality_in_kind = c725,
modality_all = c726,
modality_no_preference = c727,
modality_no_answer = c728,
income_n = c629,
income_currency = c630,
income_syp = c631,
income_try = c632,
exp_rent = c633,
exp_shelter_maintain = c634,
exp_food = c635,
exp_electricity = c636,
exp_fuel = c637,
exp_edu = c638,
exp_health = c639,
exp_disability = c640,
exp_clothing = c641,
exp_water = c642,
exp_hygiene_items = c643,
exp_nfi = c644,
exp_transportation = c645,
exp_telecom = c646,
exp_debt = c647,
exp_productive_assets = c648,
exp_other = c649,
total_expenditures = c650,
meet_basic_needs = c622,
unable_needs_first = c623,
unable_needs_second = c625,
unable_needs_third = c627,
priority_need_first = c616,
priority_need_second = c618,
priority_need_third = c620,
barrier_n = c585,
barrier_low_wages = c586,
barrier_lack_opportunities = c587,
barrier_lack_experience = c588,
barrier_expertise_mismatch = c589,
barrier_working_conditions = c590,
barrier_lack_id = c591,
barrier_physical_access = c592,
barrier_care_responsibilities = c593,
barrier_lack_clarity = c594,
barrier_lack_connections = c595,
barrier_woman = c596,
barrier_idp = c597,
barrier_disability = c598,
barrier_agriculture_livestock = c599,
barrier_too_old = c600,
barrier_no_barrier = c601,
hours_electricity = c567,
electricity_grid = c569,
electricity_communal_generator = c570,
electricity_private_generator = c571,
electricity_renewable = c572,
electricity_batteries = c573,
items_unable_to_afford = c460,
all_items_available = c439,
unavailable_thermal_blanket = c440,
unavailable_blanket = c441,
unavailable_mattress = c442,
unavailable_cooking_kit = c443,
unavailable_cooking_fuel = c444,
unavailable_mosquito_net = c445,
unavailable_jerry_can = c446,
unavailable_plastic_sheeting = c447,
unavailable_torches = c448,
unavailable_generators = c449,
unavailable_adult_clothing = c450,
unavailable_child_clothing = c451,
unavailable_winter_clothing = c452,
unavailable_shoes = c453,
unavailable_heaters = c454,
unavailable_heating_fuel = c455,
shelter_no_damage = c419,
shelter_small_holes_cracks = c420,
shelter_big_holes_cracks = c421,
shelter_collapsed_roof_floor_walls = c422,
shelter_completely_destroyed = c423,
num_children = c283,
explosions = c269,
civil_documentation = c213,
population_type = c136,
host_pop_ever_displaced = c137,
respondent_sex = c10,
employed_3_months = c17,
employment_type = c18,
hh_size = c19,
hoh_attended_school = c20,
hoh_education = c21,
respondent_plw = c16,
respondent_married = c15,
children_under_2 = c11) %>%
mutate_at(vars(modality_cash:modality_no_answer,
barrier_low_wages:barrier_no_barrier,
electricity_grid:electricity_batteries,
all_items_available:shelter_completely_destroyed),
~ as.numeric(.)) %>%
# some expenditure figures are in SYP and need to be converted
#FX rate from 02 August 2022, midpoint of the survey
mutate(total_expenditures = ifelse(income_currency == "Syrian Pounds (SYP)",
total_expenditures / 28.577,
total_expenditures),
income_try = ifelse(!is.na(income_syp),
income_syp / 28.577,
income_try),
exp_per_capita = total_expenditures / hh_size,
basic_needs = ifelse(meet_basic_needs %in% c("Adequate",
"Easily able to meet needs"),
"adequate",
"inadequate"),
exp_per_capita = total_expenditures / hh_size) %>%
mutate(pop_group_red = case_when(pop_group %in% c("IDPs in Collective center",
"IDPs in Planned camp",
"IDPs in Self-settled and/or informal camp",
"IDPs out of IDP sites") ~ "idp",
pop_group == "Returnees" ~ "returnees",
pop_group == "Residents" ~ "residents")) %>%
mutate(children_under_2 =
case_when(children_under_2 %in% c("There are no children under 2 years") ~ 0,
children_under_2 %in% c("Yes", "No") ~ 1),
is_idp = ifelse(pop_group_red == "idp", 1, 0)) %>%
# Why has nobody cleaned this dataset?
mutate_at(vars(exp_rent:exp_other),
~ ifelse(income_currency == "Syrian Pounds (SYP)", . / 28.577, .)) %>%
mutate(modality_cva = case_when(modality_voucher == 1 ~ 1,
modality_cash == 1 ~ 1,
TRUE ~ 0))
hoh_sex_labs <- msna %>%
group_by(hoh_sex) %>%
summarise(exp_per_capita = mean(exp_per_capita, na.rm = TRUE),
pct75 = quantile(total_expenditures / hh_size, na.rm = TRUE, .75),
pct25 = quantile(total_expenditures / hh_size, na.rm = TRUE, .25))
msna %>%
ggplot(aes(x = exp_per_capita)) +
geom_histogram() +
scale_x_continuous(trans = "log10", labels = comma,
breaks = c(100, 300, 1000, 3000, 10000)) +
geom_vline(aes(xintercept = mean(exp_per_capita, na.rm = TRUE)),
colour = "blue", lty = 2, alpha = .7) +
geom_vline(aes(xintercept = median(exp_per_capita, na.rm = TRUE)),
colour = "green", lty = 2, alpha = .7) +
geom_text(aes(label = round(exp_per_capita, digits = 0)), data = hoh_sex_labs,
y = 500, hjust = -.4, colour = "blue") +
labs(title = "Histogram of monthly household expenditures per capita",
subtitle = "Mean marked in blue, median in green",
x = "Expenditures per capita",
y = "Count of households") +
facet_wrap(~ hoh_sex) +
theme(legend.position = "none",
strip.text = element_text(size = 10, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.title = element_text(size = 11))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidymodels)
library(tidytext)
library(flextable)
library(RColorBrewer)
library(lubridate)
library(sf)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# disabling scientific notation
options(scipen = 999)
theme_set(theme_light())
pcode3_shape <-
st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp",
quiet = TRUE)
pop <- read_excel("./data/monthly_displacement_northen_syria_november_2022.xlsx") %>%
clean_names() %>%
# You really need to remember how to do this
rename_all(
funs(
str_replace_all(., "id_ps", "idps") %>%
str_replace_all(., "h_hs", "hhs"))) %>%
mutate(total_pop = population_individuals + idps_individuals)
locations <- read_excel("./data/Locations.xlsx") %>%
clean_names()
nw <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1,
sheet = 1) %>%
clean_names() %>%
filter(ao_c == "NW") %>%
pull(admin3pcode)
msna_names <- read_excel("./data/2022-09-06_SYR_MSNA2022_dataset_HHs.xlsx",
sheet = "Dataset - households") %>%
head(1) %>% transpose_df() %>%
mutate(col_id = paste0("c" , row_number())) %>%
select(col_id, rowname)
msna <- read_excel("./data/2022-09-06_SYR_MSNA2022_dataset_HHs.xlsx",
sheet = "Dataset - households") %>%
setNames(msna_names %>% pull(col_id)) %>%
separate(c3, c("admin1pcode", "governorate"), sep = " - ") %>%
separate(c4, c("admin2pcode", "district"), sep = " - ") %>%
separate(c5, c("admin3pcode", "sub_district"), sep = " - ") %>%
rename(admin4pcode = c7) %>%
filter(c750 == "NWS") %>%
select(id = c1,
weight = c2,
idp_site = c8,
site_type = c9,
admin1pcode,
admin2pcode,
admin3pcode,
admin4pcode,
governorate,
district,
sub_district,
rcsi = c739,
hoh_employ = c732,
pop_group_sex = c729,
hoh_sex = c730,
hoh_employ = c732,
pop_group = c749,
diplacement_year = c746,
return_year = c747,
shelter_type = c414,
modality_preference = c722,
modality_cash = c723,
modality_voucher = c724,
modality_in_kind = c725,
modality_all = c726,
modality_no_preference = c727,
modality_no_answer = c728,
income_n = c629,
income_currency = c630,
income_syp = c631,
income_try = c632,
exp_rent = c633,
exp_shelter_maintain = c634,
exp_food = c635,
exp_electricity = c636,
exp_fuel = c637,
exp_edu = c638,
exp_health = c639,
exp_disability = c640,
exp_clothing = c641,
exp_water = c642,
exp_hygiene_items = c643,
exp_nfi = c644,
exp_transportation = c645,
exp_telecom = c646,
exp_debt = c647,
exp_productive_assets = c648,
exp_other = c649,
total_expenditures = c650,
meet_basic_needs = c622,
unable_needs_first = c623,
unable_needs_second = c625,
unable_needs_third = c627,
priority_need_first = c616,
priority_need_second = c618,
priority_need_third = c620,
barrier_n = c585,
barrier_low_wages = c586,
barrier_lack_opportunities = c587,
barrier_lack_experience = c588,
barrier_expertise_mismatch = c589,
barrier_working_conditions = c590,
barrier_lack_id = c591,
barrier_physical_access = c592,
barrier_care_responsibilities = c593,
barrier_lack_clarity = c594,
barrier_lack_connections = c595,
barrier_woman = c596,
barrier_idp = c597,
barrier_disability = c598,
barrier_agriculture_livestock = c599,
barrier_too_old = c600,
barrier_no_barrier = c601,
hours_electricity = c567,
electricity_grid = c569,
electricity_communal_generator = c570,
electricity_private_generator = c571,
electricity_renewable = c572,
electricity_batteries = c573,
items_unable_to_afford = c460,
all_items_available = c439,
unavailable_thermal_blanket = c440,
unavailable_blanket = c441,
unavailable_mattress = c442,
unavailable_cooking_kit = c443,
unavailable_cooking_fuel = c444,
unavailable_mosquito_net = c445,
unavailable_jerry_can = c446,
unavailable_plastic_sheeting = c447,
unavailable_torches = c448,
unavailable_generators = c449,
unavailable_adult_clothing = c450,
unavailable_child_clothing = c451,
unavailable_winter_clothing = c452,
unavailable_shoes = c453,
unavailable_heaters = c454,
unavailable_heating_fuel = c455,
shelter_no_damage = c419,
shelter_small_holes_cracks = c420,
shelter_big_holes_cracks = c421,
shelter_collapsed_roof_floor_walls = c422,
shelter_completely_destroyed = c423,
num_children = c283,
explosions = c269,
civil_documentation = c213,
population_type = c136,
host_pop_ever_displaced = c137,
respondent_sex = c10,
employed_3_months = c17,
employment_type = c18,
hh_size = c19,
hoh_attended_school = c20,
hoh_education = c21,
respondent_plw = c16,
respondent_married = c15,
children_under_2 = c11) %>%
mutate_at(vars(modality_cash:modality_no_answer,
barrier_low_wages:barrier_no_barrier,
electricity_grid:electricity_batteries,
all_items_available:shelter_completely_destroyed),
~ as.numeric(.)) %>%
# some expenditure figures are in SYP and need to be converted
#FX rate from 02 August 2022, midpoint of the survey
mutate(total_expenditures = ifelse(income_currency == "Syrian Pounds (SYP)",
total_expenditures / 28.577,
total_expenditures),
income_try = ifelse(!is.na(income_syp),
income_syp / 28.577,
income_try),
exp_per_capita = total_expenditures / hh_size,
basic_needs = ifelse(meet_basic_needs %in% c("Adequate",
"Easily able to meet needs"),
"adequate",
"inadequate"),
exp_per_capita = total_expenditures / hh_size) %>%
mutate(pop_group_red = case_when(pop_group %in% c("IDPs in Collective center",
"IDPs in Planned camp",
"IDPs in Self-settled and/or informal camp",
"IDPs out of IDP sites") ~ "idp",
pop_group == "Returnees" ~ "returnees",
pop_group == "Residents" ~ "residents")) %>%
mutate(children_under_2 =
case_when(children_under_2 %in% c("There are no children under 2 years") ~ 0,
children_under_2 %in% c("Yes", "No") ~ 1),
is_idp = ifelse(pop_group_red == "idp", 1, 0)) %>%
# Why has nobody cleaned this dataset?
mutate_at(vars(exp_rent:exp_other),
~ ifelse(income_currency == "Syrian Pounds (SYP)", . / 28.577, .)) %>%
mutate(modality_cva = case_when(modality_voucher == 1 ~ 1,
modality_cash == 1 ~ 1,
TRUE ~ 0))
hoh_sex_labs <- msna %>%
group_by(hoh_sex) %>%
summarise(exp_per_capita = mean(exp_per_capita, na.rm = TRUE),
pct75 = quantile(total_expenditures / hh_size, na.rm = TRUE, .75),
pct25 = quantile(total_expenditures / hh_size, na.rm = TRUE, .25))
msna %>%
ggplot(aes(x = exp_per_capita)) +
geom_histogram() +
scale_x_continuous(trans = "log10", labels = comma,
breaks = c(100, 300, 1000, 3000, 10000)) +
geom_vline(aes(xintercept = mean(exp_per_capita, na.rm = TRUE)),
colour = "blue", lty = 2, alpha = .7) +
geom_vline(aes(xintercept = median(exp_per_capita, na.rm = TRUE)),
colour = "green", lty = 2, alpha = .7) +
geom_text(aes(label = round(exp_per_capita, digits = 0)), data = hoh_sex_labs,
y = 500, hjust = -.4, colour = "blue") +
labs(title = "Histogram of monthly household expenditures per capita",
subtitle = "Mean marked in blue, median in green",
x = "Expenditures per capita",
y = "Count of households") +
facet_wrap(~ hoh_sex) +
theme(legend.position = "none",
strip.text = element_text(size = 10, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.title = element_text(size = 11))
