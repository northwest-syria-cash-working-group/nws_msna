---
title: "Untitled"
output: html_document
date: '2023-05-03'
---

```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = FALSE)

library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidytext)
library(flextable)
library(RColorBrewer)
library(lubridate)
library(sf)
library(ggrepel)

range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

opts <- options(knitr.kable.NA = "")

`%out%` <- Negate(`%in%`)

# function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# disabling scientific notation
options(scipen = 999)

theme_set(theme_light())
```




```{r warning=FALSE}

pcode3_shape <- 
  st_read("./data/syr_admbnda_uncs_unocha_20201217/syr_admbnda_adm3_uncs_unocha_20201217.shp", 
          quiet = TRUE)

pop <- read_excel("./data/monthly_displacement_northen_syria_november_2022.xlsx") %>% 
  clean_names() %>% 
  # You really need to remember how to do this
  rename_all(
    funs(
      str_replace_all(., "id_ps", "idps") %>%
        str_replace_all(., "h_hs", "hhs"))) %>% 
  mutate(total_pop = population_individuals + idps_individuals)

locations <- read_excel("./data/Locations.xlsx") %>% 
  clean_names()

nw_pcode3 <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1, 
                  sheet = 1) %>%
  clean_names() %>% 
  filter(ao_c == "NW") %>% 
  pull(admin3pcode)

hno <- read_excel("./data/2023HNO_PiN_Severity_detailedAoI_FORSHARE 15032023.xlsx", skip = 1, 
                  sheet = 1) %>%
  clean_names() %>% 
  rename(severity = x2023_hno_inter_sector_severity)

msna_names <- read_excel("./data/2022-09-06_SYR_MSNA2022_dataset_HHs.xlsx", 
           sheet = "Dataset - households") %>% 
  head(1) %>% transpose_df() %>% 
  mutate(col_id = paste0("c" , row_number())) %>% 
  select(col_id, rowname)

msna <- read_excel("./data/2022-09-06_SYR_MSNA2022_dataset_HHs.xlsx", 
           sheet = "Dataset - households") %>% 
  setNames(msna_names %>% pull(col_id)) %>% 
  separate(c3, c("admin1pcode", "governorate"), sep = " - ") %>% 
  separate(c4, c("admin2pcode", "district"), sep = " - ") %>% 
  separate(c5, c("admin3pcode", "sub_district"), sep = " - ") %>% 
  rename(admin4pcode = c7) %>% 
  # filter(c750 == "NWS") %>% 
  select(id = c1,
         weight = c2,
         location_type = c6,
         idp_site = c8, 
         site_type = c9,
         admin1pcode,
         admin2pcode, 
         admin3pcode, 
         admin4pcode,
         governorate, 
         district, 
         sub_district, 
         rcsi = c739, 
         hoh_employ = c732, 
         pop_group_sex = c729, 
         hoh_sex = c730, 
         hoh_employ = c732, 
         pop_group = c749, 
         diplacement_year = c746, 
         return_year = c747, 
         shelter_type = c414,
         modality_preference = c722,
         modality_cash = c723,
         modality_voucher = c724, 
         modality_in_kind = c725, 
         modality_all = c726, 
         modality_no_preference = c727, 
         modality_no_answer = c728, 
         income_n = c629, 
         income_currency = c630, 
         income_syp = c631, 
         income_try = c632, 
         exp_rent = c633, 
         exp_shelter_maintain = c634, 
         exp_food = c635, 
         exp_electricity = c636, 
         exp_fuel = c637, 
         exp_edu = c638, 
         exp_health = c639, 
         exp_disability = c640, 
         exp_clothing = c641, 
         exp_water = c642, 
         exp_hygiene_items = c643, 
         exp_nfi = c644, 
         exp_transportation = c645,
         exp_telecom = c646, 
         exp_debt = c647,
         exp_productive_assets = c648, 
         exp_other = c649, 
         total_expenditures = c650,
         meet_basic_needs = c622, 
         unable_needs_first = c623, 
         unable_needs_second = c625, 
         unable_needs_third = c627, 
         priority_need_first = c616, 
         priority_need_second = c618, 
         priority_need_third = c620, 
         barrier_n = c585, 
         barrier_low_wages = c586, 
         barrier_lack_opportunities = c587, 
         barrier_lack_experience = c588, 
         barrier_expertise_mismatch = c589, 
         barrier_working_conditions = c590, 
         barrier_lack_id = c591, 
         barrier_physical_access = c592, 
         barrier_care_responsibilities = c593, 
         barrier_lack_clarity = c594, 
         barrier_lack_connections = c595, 
         barrier_woman = c596, 
         barrier_idp = c597, 
         barrier_disability = c598,
         barrier_agriculture_livestock = c599,
         barrier_too_old = c600,
         barrier_no_barrier = c601, 
         hours_electricity = c567, 
         electricity_grid = c569,
         electricity_communal_generator = c570, 
         electricity_private_generator = c571, 
         electricity_renewable = c572, 
         electricity_batteries = c573, 
         items_unable_to_afford = c460, 
         all_items_available = c439, 
         unavailable_thermal_blanket = c440, 
         unavailable_blanket = c441, 
         unavailable_mattress = c442, 
         unavailable_cooking_kit = c443, 
         unavailable_cooking_fuel = c444, 
         unavailable_mosquito_net = c445, 
         unavailable_jerry_can = c446, 
         unavailable_plastic_sheeting = c447, 
         unavailable_torches = c448, 
         unavailable_generators = c449, 
         unavailable_adult_clothing = c450, 
         unavailable_child_clothing = c451, 
         unavailable_winter_clothing = c452, 
         unavailable_shoes = c453, 
         unavailable_heaters = c454, 
         unavailable_heating_fuel = c455,
         shelter_no_damage = c419, 
         shelter_small_holes_cracks = c420, 
         shelter_big_holes_cracks = c421, 
         shelter_collapsed_roof_floor_walls = c422, 
         shelter_completely_destroyed = c423, 
         num_children = c283, 
         explosions = c269, 
         civil_documentation = c213,
         population_type = c136, 
         host_pop_ever_displaced = c137, 
         respondent_sex = c10, 
         employed_3_months = c17, 
         employment_type = c18, 
         hh_size = c19, 
         hoh_attended_school = c20, 
         hoh_education = c21, 
         respondent_plw = c16, 
         respondent_married = c15, 
         children_under_2 = c11, 
         pwd = c737, 
         rcsi_less_preferable = c497, 
         rcsi_borrow_food = c498, 
         rcsi_food_on_credit = c499,
         rcsi_reduce_portion = c500, 
         rcsi_reduce_meals = c501, 
         rcsi_adult_consumption = c502, 
         not_afford_nothing = c461, 
         not_afford_thermal_blankets = c462,
         not_afford_blankets = c463,
         not_afford_sleeping_mats = c464,
         not_afford_cooking_kits = c465,
         not_afford_cooking_fuel = c466,
         not_afford_mosquito_net = c467,
         not_afford_water_containers = c468,
         not_afford_plastic_sheeting = c469,
         not_afford_solar_lamps = c470,
         not_afford_generators = c471,
         not_afford_adult_clothing = c472,
         not_afford_children_clothing = c473,
         not_afford_winter_clothing = c474,
         not_afford_boots_winter = c475,
         not_afford_winter_heaters = c476,
         not_afford_heating_fuel = c477,
         not_afford_other = c478) %>% 
  mutate_at(vars(modality_cash:modality_no_answer, 
                 barrier_low_wages:barrier_no_barrier,
                 electricity_grid:electricity_batteries,
                 all_items_available:shelter_completely_destroyed, 
                 not_afford_nothing:not_afford_other),
            ~ as.numeric(.)) %>% 
  # some expenditure figures are in SYP and need to be converted
  #FX rate from 02 August 2022, midpoint of the survey from
  # https://www.xe.com/currencycharts/?from=TRY&to=SYP 
  # OANDA shows a drastically different rate for some reason 
  mutate(
    total_expenditures = ifelse(income_currency == "Syrian Pounds (SYP)", 
                                     total_expenditures / 140.383, 
                                     total_expenditures), 
         income_try = ifelse(!is.na(income_syp) & is.na(income_try), 
                             income_syp / 140.383, 
                             income_try),
         exp_per_capita = total_expenditures / hh_size, 
         basic_needs = ifelse(meet_basic_needs %in% c("Adequate", 
                                                      "Easily able to meet needs"), 
                              "adequate", 
                              "inadequate"), 
         exp_per_capita = total_expenditures / hh_size) %>% 
  mutate(pop_group_red = case_when(pop_group %in% c("IDPs in Collective center", 
                                       "IDPs in Planned camp", 
                                       "IDPs in Self-settled and/or informal camp", 
                                       "IDPs out of IDP sites") ~ "idp", 
                                   pop_group == "Returnees" ~ "returnees", 
                                   pop_group == "Residents" ~ "residents")) %>% 
  mutate(children_under_2 = 
           case_when(children_under_2 %in% c("There are no children under 2 years") ~ 0, 
                     children_under_2 %in% c("Yes", "No") ~ 1), 
         is_idp = ifelse(pop_group_red == "idp", 1, 0)) %>% 
  mutate_at(vars(exp_rent:exp_other), 
            ~ ifelse(income_currency == "Syrian Pounds (SYP)", . / 140.383, .)) %>% 
  mutate(modality_cva = case_when(modality_voucher == 1 ~ 1, 
                         modality_cash == 1 ~ 1, 
                         TRUE ~ 0)) %>% 
  mutate(non_house = 
           ifelse(shelter_type %in% c("House/ apartment (finished)",
                                      "House/ apartment (unfinished)"), 
                  "House / apartment", "Makeshift, tent and other"))


```


```{r}
msna %>%
  filter(admin3pcode %in% nw_pcode3) %>% 
  {mean(.$hh_size, na.rm = TRUE)}
```


```{r}
loc_type_labs <- msna %>% 
  group_by(location_type) %>% 
  summarise(exp_per_capita = mean(exp_per_capita, na.rm = TRUE))
    
    total_expenditures = sum(total_expenditures, na.rm = TRUE), 
            hh_size = sum(hh_size, na.rm = TRUE)) %>% 
  mutate(exp_per_capita = total_expenditures / hh_size)

msna %>%
  filter(!is.na(total_expenditures)) %>% 
  ggplot(aes(x = exp_per_capita)) + 
  geom_histogram() + 
  geom_vline(aes(xintercept = exp_per_capita), 
                 colour = "blue", lty = 2, alpha = .7, 
             data = loc_type_labs) + 
  geom_text(aes(label = round(exp_per_capita)), 
            x = Inf, y = Inf, hjust = 1, vjust = 1,
            data = loc_type_labs) + 
  scale_x_log10(labels = comma) + 
  facet_wrap(~ location_type, scales = "free") + 
  labs(title = "Expenditures by location type", 
       x = "Expenditures per capita", 
       y = "Count of households") + 
  theme(legend.position = "none", 
        strip.text = element_text(size = 10, face = "bold"),
        strip.background = element_rect(fill = "#212121"))


```

```{r}
msna %>% 
  group_by(shelter_type) %>% 
  summarise(exp_per_capita = mean(exp_per_capita, na.rm = TRUE), 
            n = n()) %>% 
  arrange(desc(exp_per_capita))
```



```{r}
msna %>% 
  glimpse()

msna %>% 
  summarise_at(vars(not_afford_nothing:not_afford_other), ~ sum(., na.rm = TRUE))

msna %>% 
  select(not_afford_nothing:not_afford_other) %>% 
  skimr::skim()

# The items are consistent 
msna %>% 
  filter(not_afford_nothing == 1) %>% 
  summarise_at(vars(not_afford_thermal_blankets:not_afford_other), ~ sum(., na.rm = TRUE))

not_afford <- msna %>% 
  # dropping the `other` option, since there was only one response
  # and it would get unnecessarily weighted 
  select(id, not_afford_thermal_blankets:not_afford_heating_fuel) %>% 
  mutate_at(vars(not_afford_thermal_blankets:not_afford_heating_fuel), 
            ~ replace_na(., 0)) %>% 
  mdepriv(c("not_afford_thermal_blankets", 
            "not_afford_blankets", 
            "not_afford_sleeping_mats", 
            "not_afford_cooking_kits", 
            "not_afford_cooking_fuel", 
            "not_afford_mosquito_net", 
            "not_afford_water_containers", 
            "not_afford_plastic_sheeting", 
            "not_afford_solar_lamps", 
            "not_afford_generators", 
            "not_afford_adult_clothing", 
            "not_afford_children_clothing",
            "not_afford_winter_clothing", 
            "not_afford_boots_winter", 
            "not_afford_winter_heaters",
            "not_afford_heating_fuel"), 
          method = "cz", output = "all", 
          score_i_heading = "not_afford_score")

msna %>% 
  filter(!is.na(total_expenditures)) %>% 
  mutate(pc_food = exp_food / total_expenditures) %>% 
  select(id,  rcsi) %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  left_join(pc_food$data %>% 
              select(id, exp_food_score), 
            by = "id") %>% 
  # select(-id) %>% 
  # cor(use = "pairwise.complete.obs", 
  #     method = "pearson")
  ggplot(aes(x = rcsi, 
             y = pc_score)) + 
  geom_point(alpha = .5) +
  geom_smooth(method = "lm")

# rCSI has a much stronger correlation with the not_afford_score than pc_food 
# Maybe expenditures are severely wonky? Or the food percentages are not really that bad, 
# Or, you need to make a score taking into account pc_food and total_expenditures 

  

```

### Vulnerabilty score

```{r}

not_afford <- msna %>% 
  # dropping the `other` option, since there was only one response
  # and it would get unnecessarily weighted 
  select(id, not_afford_thermal_blankets:not_afford_heating_fuel) %>% 
  mutate_at(vars(not_afford_thermal_blankets:not_afford_heating_fuel), 
            ~ replace_na(., 0)) %>% 
  mdepriv(c("not_afford_thermal_blankets", 
            "not_afford_blankets", 
            "not_afford_sleeping_mats", 
            "not_afford_cooking_kits", 
            "not_afford_cooking_fuel", 
            "not_afford_mosquito_net", 
            "not_afford_water_containers", 
            "not_afford_plastic_sheeting", 
            "not_afford_solar_lamps", 
            "not_afford_generators", 
            "not_afford_adult_clothing", 
            "not_afford_children_clothing",
            "not_afford_winter_clothing", 
            "not_afford_boots_winter", 
            "not_afford_winter_heaters",
            "not_afford_heating_fuel"), 
          method = "bv", output = "all", 
          score_i_heading = "not_afford_score")


# Household-level score
# I think you've got a good score
vulnerabilty <- msna %>% 
  filter(!is.na(total_expenditures) & exp_food != 0) %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  mutate(pc_food = exp_food / total_expenditures,
         exp_food_per_capita = exp_food / hh_size, 
         food_per_capita_envelope = 1 - (exp_food_per_capita / max(exp_food_per_capita))) %>%
  mutate(completely_unable = ifelse(meet_basic_needs == "Completely unable", 
                                    1, 0)) %>%
  filter(!is.na(rcsi) & !is.na(not_afford_score) & !is.na(food_per_capita_envelope)) %>% 
  mutate(rcsi = range_wna(rcsi)) %>% 
  mdepriv(c("rcsi", 
            "food_per_capita_envelope", 
            "not_afford_score"), 
          method = "bv", output = "all", 
          score_i_heading = "vul_score")
  


```


```{r}
# Let's aggregate the score at admin3

vulnerability_admin3 <- msna %>% 
  filter(!is.na(total_expenditures) & exp_food != 0) %>% 
  mutate(exp_food_per_capita = exp_food / hh_size) %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  group_by(admin3pcode) %>% 
  # I don't know why you did this, you can just take weight out 
  summarise(exp_food = sum(exp_food * weight), 
            rcsi = sum(rcsi * weight),
            not_afford_score = sum(not_afford_score * weight), 
            hh_size = sum(hh_size * weight),
            weight = sum(weight), 
            .groups = "drop") %>% 
  mutate(exp_food_per_capita = exp_food / hh_size / weight, 
         rcsi = rcsi / weight, 
         not_afford_score = not_afford_score / weight, 
         food_per_capita_envelope = 1 - (exp_food_per_capita / max(exp_food_per_capita)), 
         rcsi = range_wna(rcsi)) %>% 
  mdepriv(c("rcsi", 
            "food_per_capita_envelope", 
            "not_afford_score"), 
          method = "bv", output = "all", 
          score_i_heading = "vul_score_admin3")
  
 
```

```{r}
vulnerability_admin3$data %>% 
  left_join(pcode3_shape, 
            by = c("admin3pcode" = "ADM3_PCODE")) %>% 
  filter(admin3pcode %in% nw_pcode3) %>% 
  st_as_sf() %>%
  ggplot() + 
  geom_sf(size = .01, 
          aes(fill = vul_score_admin3)) + 
  scale_fill_viridis() + 
  theme_void() + 
  theme(plot.background = element_rect(colour = "white"), 
        plot.title = element_text(hjust = .5)) + 
  labs(fill = "vulnerability\nscore", 
       title = "Vulnerability score by sub-district")

```



```{r}
vulnerability_admin3$data %>% 
  left_join(hno %>% select(admin3pcode, severity), 
            by = "admin3pcode") %>% 
  lm(severity ~ vul_score_admin3, data = .) %>% 
  broom::augment(newdata = vulnerability_admin3$data %>%
                   left_join(hno %>% select(admin3pcode, severity), 
                             by = "admin3pcode")) %>% 
  ggplot(aes(x = .fitted, y = severity)) + 
  geom_point(aes(size = weight), 
             alpha = .3) + 
  geom_smooth(method = "lm") +
  labs(x = "Predicted Values", y = "Actual Values", title = "Predicted vs Actual Values")


  left_join(locations %>% 
              distinct(governorate = admin1name_en, 
                     district = admin2name_en, 
                     sub_district = admin3name_en, 
                     admin3pcode), 
            by = "admin3pcode") %>% 
  left_join(hno %>% select(admin3pcode, severity), 
            by = "admin3pcode") %>% 
  ggplot(aes(x = vul_score_admin3, y = severity)) + 
  geom_point() + 
  geom_text_repel(aes(label = sub_district)) + 
  geom_smooth(method = "lm")
```

```{r}
hno %>% glimpse()
```


```{r}
# No need to log exp_food_per_capita

msna %>% 
  filter(!is.na(total_expenditures) & exp_food != 0) %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  mutate(pc_food = exp_food / total_expenditures,
         exp_food_per_capita = exp_food / hh_size, 
         food_per_capita_envelope = 1 - (exp_food_per_capita / max(exp_food_per_capita))) %>%
  mutate(completely_unable = ifelse(meet_basic_needs == "Completely unable", 
                                    1, 0)) %>%
  filter(!is.na(rcsi) & !is.na(not_afford_score) & !is.na(food_per_capita_envelope)) %>% 
  mutate(rcsi = range_wna(rcsi)) %>% 
  mdepriv(c("rcsi", 
            "food_per_capita_envelope", 
            "not_afford_score"), 
          method = "bv", output = "all", 
          score_i_heading = "vul_score")
  
```


```{r}
msna %>% 
  # Explicitly filter out these things 
  filter(!is.na(total_expenditures) & exp_food != 0) %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  mutate(pc_food = exp_food / total_expenditures,
         exp_food_per_capita = exp_food / hh_size, 
         food_per_capita_inverse = 1 / exp_food_per_capita) %>% 
  select(rcsi, food_per_capita_inverse, not_afford_score) %>% 
  cor(use = "pairwise.complete.obs", 
      method = "pearson")
```

### Meet basic needs and expenditures

Ability to meet basic needs not always related to income 


```{r}
exp_labs <- msna %>%
  filter(!is.na(total_expenditures)) %>%
  group_by(meet_basic_needs) %>%
  summarise(exp_per_capita = mean(exp_per_capita, na.rm = TRUE)) 

msna %>% 
  filter(!is.na(total_expenditures)) %>% 
  ggplot(aes(x = exp_per_capita)) + 
  geom_histogram() + 
  facet_wrap(~ meet_basic_needs, scales = "free_y") + 
  geom_vline(aes(xintercept = exp_per_capita), 
             colour = "blue", lty = 2, alpha = .7, 
             data = exp_labs) +
  geom_text(aes(label = comma(exp_per_capita, accuracy = .1)),  
            x = Inf, y = Inf, hjust = 1, vjust = 1,
            data = exp_labs) + 
  scale_x_continuous(labels = comma, trans = "log10") + 
  labs(x = "Expenditures per capita", 
       y = "Count of households", 
       title = "Expenditures per capita by ability to meet basic needs") + 
  theme(strip.text = element_text(size = 10, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.title = element_text(size = 11))

```

<br>

Food expenditures per capita seem to be better able to distinguish between groups based on whether they are able to fully meet their expenditures. 

```{r}

# In the end, you still need to pre-calculate the means 

food_exp_labs <- msna %>%
  filter(!is.na(exp_food)) %>%
  mutate(exp_food_per_capita = exp_food / hh_size) %>% 
  group_by(meet_basic_needs) %>%
  summarise(exp_food_pc_total = sum(exp_food_per_capita * weight, na.rm = TRUE),
            weight = sum(weight)) %>%
  mutate(exp_food_per_capita = exp_food_pc_total / weight)

msna %>% 
  filter(!is.na(exp_food)) %>% 
  mutate(exp_food_per_capita = exp_food / hh_size) %>% 
  ggplot(aes(x = exp_food_per_capita)) + 
  geom_histogram() + 
  facet_wrap(~ meet_basic_needs, scales = "free_y") + 
  geom_vline(aes(xintercept = exp_food_per_capita), 
             colour = "blue", lty = 2, alpha = .7, 
             data = food_exp_labs) +
  geom_text(aes(label = comma(exp_food_per_capita)),  
            x = Inf, y = Inf, hjust = 1, vjust = 1,
            data = food_exp_labs) + 
  scale_x_continuous(labels = comma, trans = "log10") + 
  labs(x = "Food expenditures per capita", 
       y = "Count of households", 
       title = "Food expenditures by ability to meet basic needs") + 
  theme(strip.text = element_text(size = 10, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.title = element_text(size = 11))

```



```{r}
basic_means_rcsi <- msna %>%
  filter(!is.na(rcsi)) %>% 
  group_by(meet_basic_needs) %>%
  summarise(rcsi = mean(rcsi, na.rm = TRUE))

msna %>% 
  filter(!is.na(rcsi)) %>% 
  ggplot(aes(x = rcsi)) + 
  geom_histogram() + 
  facet_wrap(~ meet_basic_needs) + 
  geom_vline(aes(xintercept = rcsi), 
             colour = "blue", lty = 2, alpha = .7, 
             data = basic_means_rcsi) +
  geom_text(aes(label = round(rcsi, digits = 2)),  
            y = 300, hjust = -.1, 
            data = basic_means_rcsi) +
  labs(x = "rCSI", 
       y = "Count of households", 
       title = "rCSI") + 
  theme(strip.text = element_text(size = 10, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.title = element_text(size = 11))
```


```{r}
msna %>% 
  filter(!is.na(total_expenditures)) %>% 
  mutate(pc_food = exp_food / total_expenditures) %>% 
  ggplot(aes(x = pc_food, y = rcsi)) + 
  geom_point(alpha = .7) + 
  geom_smooth(method = "lm") + 
  scale_y_log10()

msna %>% 
  filter(!is.na(total_expenditures)) %>% 
  mutate(food_exp_per_capita = exp_food / total_expenditures) %>% 
  mutate(pc_food = exp_food / total_expenditures) %>% 
  lm(rcsi ~ pc_food, data = .) %>% 
  summary() %>% 
  broom::glance()
```

```{r}
msna %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  ggplot(aes(x = not_afford_score, y = rcsi)) + 
  geom_point(alpha = .5) + 
  geom_smooth(method = "lm") + 

msna %>% 
  left_join(not_afford$data %>% 
              select(id, not_afford_score), 
            by = "id") %>% 
  mutate(pc_food = exp_food / total_expenditures) %>% 
  ggplot(aes(x = not_afford_score, y = exp_food)) + 
  geom_point(alpha = .5) + 
  geom_smooth(method = "lm")
```



```{r}
house_food_labs <- msna %>% 
  filter(!is.na(total_expenditures)) %>% 
  mutate(non_house = 
           ifelse(shelter_type %in% c("House/ apartment (finished)",
                                      "House/ apartment (unfinished)"), 
                  "House / apartment", "Makeshift, tent and other"), 
         exp_food_per_capita = exp_food / hh_size) %>%
  group_by(non_house) %>% 
  summarise(exp_food_per_capita = mean(exp_food_per_capita))

msna %>% 
  mutate(non_house = 
           ifelse(shelter_type %in% c("House/ apartment (finished)",
                                      "House/ apartment (unfinished)"), 
                  "House / apartment", "Makeshift, tent and other")) %>% 
  filter(!is.na(total_expenditures)) %>% 
  mutate(exp_food_per_capita = exp_food / hh_size) %>% 
  ggplot(aes(x = exp_food_per_capita)) + 
  geom_histogram() + 
  geom_vline(data = house_food_labs, aes(xintercept = exp_food_per_capita), 
             colour = "blue", lty = 2) + 
  geom_text(data = house_food_labs, aes(label = comma(exp_food_per_capita)), 
           y = 240, hjust = -.15) + 
  scale_x_continuous(labels = comma, trans = "log10") + 
  facet_wrap(~ non_house, scales = "free_y") + 
  theme(strip.text = element_text(size = 10, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.title = element_text(size = 11))
```



